{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ontouml.org/ontouml-schema/1.0/",
  "title": "Model",
  "description": "The `ontouml-schema` is an object that represents an OntoUML ontology. Mandatory fields: constant \"@type\": \"Model\", \"id\", \"name\", \"authors\", \"contents\". Additional fields allowed.",
  "type": "object",
  
  "properties": {
    "@type": { "const": "Model" },
    "id": { "$ref": "#/definitions/id" },
    "name": { "$ref": "#/definitions/name" },
    "authors": { "$ref": "#/definitions/authors" },
    "contents": { "$ref": "#/definitions/contents" }
  },

  "required": [
    "@type",
    "id",
    "name",
    "authors",
    "contents"
  ],

  "definitions": {
    "Package": {
      "description": "An object representing a packge element. Mandatory fields: constant \"@type\": \"Package\", \"id\". Optional fields: \"name\", \"contents\", \"propertyAssignments\". Additional fields allowed.",
      "type": "object",
      "properties": {
        "@type": { "const": "Package" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "contents": { "$ref": "#/definitions/contents" },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" }
      },
      "required": [
        "@type",
        "id",
        "name",
        "contents",
        "propertyAssignments"
      ]
    },

    "Class": {
      "description": "An object representing a class element. Mandatory fields: constant \"@type\": \"Class\", \"id\", \"name\", \"stereotypes\", \"properties\", \"propertyAssignments\". Additional fields allowed.",
      "type": "object",
      "properties": {
        "@type": { "const": "Class" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "stereotypes": { "$ref": "#/definitions/stereotypes" },
        "properties": { "$ref": "#/definitions/properties" },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" },
        "isAbstract": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        }
      },
      "required": [
        "@type",
        "id",
        "name",
        "stereotypes",
        "properties",
        "propertyAssignments",
        "isAbstract"
      ]
    },

    "Association": {
      "description": "An object representing an association element. Mandatory fields: constant \"@type\": \"Association\", \"id\", \"name\", \"stereotypes\", \"properties\", \"propertyAssignments\". The \"properties\" array must have at least two items and is not nullable. The order of these items represents their position on a equivalent predicate, e.g., in the ternary association \"buys-product-from(buyer,product,seller)\", the order of items representing these entities must follow the order \"buyer\" (in properties[0]), \"product\" (in properties[1]), and \"seller\" (in properties[2]). Additional fields allowed. Ordered.",
      "type": "object",
      "properties": {
        "@type": { "const": "Association" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "stereotypes": { "$ref": "#/definitions/stereotypes" },
        "properties": { 
          "allOf": [ { "$ref": "#/definitions/properties" } ],
          "minItems": 2
        },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" },
        "isAbstract": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "isDerived": { 
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        }
      },
      "required": [
        "@type",
        "id",
        "name",
        "stereotypes",
        "properties",
        "propertyAssignments",
        "isAbstract",
        "isDerived"
      ],
      "not": { "properties": { "properties": { "type": "null" } } }
    },

    "Generalization": {
      "description": "An object representing a generalization element. Mandatory fields: constant \"@type\": \"Generalization\", \"id\", \"name\", \"generic\", \"specific\". Additional fields allowed.",
      "type": "object",
      "properties": {
        "@type": { "const": "Generalization" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "generic": { "$ref": "#/definitions/reference" },
        "specific": { "$ref": "#/definitions/reference" },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" }
      },
      "required": [
        "@type",
        "id",
        "name",
        "generic",
        "specific",
        "propertyAssignments"
      ]
    },

    "GeneralizationSet": {
      "description": "An object representing a generalization set element. Mandatory fields: constant \"@type\": \"GeneralizationSet\", \"id\", \"name\", \"isDisjoint\", \"isComplete\", \"categorizer\", \"generalizations\". Additional fields allowed.",
      "type": "object",
      "properties": {
        "@type": { "const": "GeneralizationSet" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "isDisjoint": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "isComplete": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "categorizer": {
          "oneOf": [
            { "$ref": "#/definitions/reference" },
            { "type": "null" }
          ]
        },
        "generalizations": {
          "type": "array",
          "minItems": 1,
          "items": { "$ref": "#/definitions/reference" }
        },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" }
      },
      "required": [
        "@type",
        "id",
        "name",
        "isDisjoint",
        "isComplete",
        "categorizer",
        "generalizations",
        "propertyAssignments"
      ]
    },

    "Property": {
      "description": "An object representing a property element. This captures properties of instances of classes, associations and derivation associations, where in the first case properties are analougous to attrbutes while in the second and third cases are analogous to association ends. Mandatory fields: constant \"@type\": \"Property\", \"id\", \"name\", \"type\", \"cardinality\", \"stereotypes\", \"propertyAssignments\". Additional fields allowed.",
      "type": "object",
      "properties": {
        "@type": { "const": "Property" },
        "id": { "$ref": "#/definitions/id" },
        "name": { "$ref": "#/definitions/name" },
        "type": { "$ref": "#/definitions/reference" },
        "cardinality": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1
            },
            { "type": "null" }
          ]
        },
        "stereotypes": { "$ref": "#/definitions/stereotypes" },
        "propertyAssignments": { "$ref": "#/definitions/propertyAssignments" },
        "subsettedProperties": {
          "oneOf": [
            {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": { "$ref": "#/definitions/reference" }
            },
            { "type": "null" }
          ]
        },
        "redefinedProperties": {
          "oneOf": [
            {
              "type": "array",
              "minItems": 1,
              "uniqueItems": true,
              "items": { "$ref": "#/definitions/reference" }
            },
            { "type": "null" }
          ]
        },
        "aggregationKind": { 
          "oneOf": [
            {
              "type": "string",
              "enum": [ "NONE", "SHARED", "COMPOSITE" ]
            },
            { "type": "null" }
          ]
        },
        "isDerived": { 
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "isOrdered": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "isReadOnly": {
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        }
      },
      "required": [
        "@type",
        "id",
        "name",
        "type",
        "cardinality",
        "stereotypes",
        "propertyAssignments",
        "subsettedProperties",
        "redefinedProperties",
        "aggregationKind",
        "isDerived",
        "isOrdered",
        "isReadOnly"
      ]
    },

    "authors": {
      "description": "A non-empty array of strings representing names of an object's authors. Nullable.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        { "type": "null" }
      ]
    },

    "contents": {
      "description": "A non-empty array of objects representing model elements. May contain objects representing one of the following types of model elements: \"Package\", \"Class\", \"Association\", \"Generalization\", \"GeneralizationSet\". Nullable.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "oneOf": [
              { "$ref": "#/definitions/Package" },
              { "$ref": "#/definitions/Class" },
              { "$ref": "#/definitions/Association" },
              { "$ref": "#/definitions/Generalization" },
              { "$ref": "#/definitions/GeneralizationSet" }
            ]
          }
        },
        { "type": "null" }
      ]
    },
    
    "id": {
      "description": "A non-empty string representing an object's unique identifier.",
      "type": "string",
      "minLength": 1
    },

    "name": {
      "description": "A non-empty string representing an object's name. Nullable.",
      "oneOf": [
        {
          "type": "string",
          "minLength": 1
        },
        { "type": "null" }
      ]
    },

    "properties": {
      "description": "A non-empty array of Property objects representing properties of instances of the container model element. This captures properties of instances of classes, associations and derivation associations, where in the first case properties are analougous to attrbutes while in the second and third cases are analogous to association ends. Nullable.",
      "oneOf": [
        {
          "type": "array",
          "minItems": 1,
          "items": { "$ref": "#/definitions/Property" }
        },
        { "type": "null" }
      ]
    },

    "reference": {
      "description": "An object representing a singular reference to a model element. Mandatory fields: \"type\", \"id\".",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Package",
            "Class",
            "Association",
            "Generalization",
            "GeneralizationSet",
            "Property"
          ]
        },
        "id": { "$ref": "#/definitions/id" }
      },
      "required": [
        "type",
        "id"
      ],
      "additionalProperties": false
    },

    "stereotypes": {
      "description": "A non-empty array of non-empty strings representing stereotypes of its container object. Nullable.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^([a-z]|[A-Z])+(/([a-z]|[A-Z])+)*$",
            "minLength": 1
          }
        },
        { "type": "null" }
      ]
    },

    "propertyAssignments": {
      "description": "A value assignment represents the declaration of a value to a property that the container object instantiates. These values are restricted to null, booleans, numbers, strings, or non-empty arrays of these. Nullable.",
      "oneOf": [
        { 
          "type": "object",
          "minProperties": 1 
        },
        { "type": "null" }
      ],
      "additionalProperties": {
        "oneOf": [
          { "type": "null" },
          { "type": "boolean" },
          { "type": "number" },
          { "type": "string" },
          { "$ref": "#/definitions/reference" },
          { 
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "anyOf": [
                { "type": "boolean" },
                { "type": "number" },
                { "type": "string" },
                { "$ref": "#/definitions/reference" }
              ]
            }
          }
        ]
      }
    }

  }
}
